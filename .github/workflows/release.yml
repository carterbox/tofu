name: Build Release Appbundles

on:
  workflow_dispatch: # Enable manual run
  push:
    tags:
      # Use pattern matching to only run on version release tags
      - "[0-9]+.[0-9]+.[0-9]+"

env:
  PROJECT_ID: io.github.carterbox.tofu
  BUILD_NAME: ${{ github.ref_name }}

jobs:
  set-the-build-number:
    runs-on: ubuntu-latest
    name: Set the build number from current date
    steps:
      - run: echo BUILD_NUMBER=$( date +"%Y%m%d%H" ) >> $GITHUB_OUTPUT
        id: step1
    outputs:
      build-number: ${{ steps.step1.outputs.BUILD_NUMBER }}

  build-flutter-linux:
    strategy:
      matrix:
        architecture: [x64, arm64]
        include:
          - architecture: x64
            base_image: raspios_lite:latest
          - architecture: arm64
            base_image: raspios_lite_arm64:latest
    needs: set-the-build-number
    name: Build and compress a Linux ${{ matrix.architecture }} app bundle
    runs-on: ubuntu-latest
    steps:
      # - uses: carterbox/flutter-action@main
      #   with:
      #     cache-path: "/home/runner/work/flutter"
      #     channel: "stable"

      - name: Checkout source
        uses: actions/checkout@v3

      - name: Build Flutter Linux app bundle
        uses: pguyot/arm-runner-action@v2
        with:
          base_image: ${{ matrix.base_image }}
          commands: |
            uname -m
            pwd
            ls
            # rm -rf $FLUTTER_ROOT/bin/cache
            # export PATH=$PATH:$FLUTTER_ROOT/bin
            # flutter doctor
            # flutter config --enable-linux-desktop
            # flutter pub get
            # flutter build linux --release --target-platform linux-${{ matrix.architecture }} --build-name ${{ env.BUILD_NAME }} --build-number ${{ needs.set-the-build-number.outputs.build-number }}

      - name: Compress Flutter build
        run: |
          cp -v linux/flatpak/io.github.carterbox.Tofu.metainfo.xml build/linux/${{ matrix.architecture }}/release/bundle/io.github.carterbox.Tofu.metainfo.xml
          cp -v linux/flatpak/io.github.carterbox.Tofu.desktop build/linux/${{ matrix.architecture }}/release/bundle/io.github.carterbox.Tofu.desktop
          cp -v web/icons/Icon-maskable-512.png build/linux/${{ matrix.architecture }}/release/bundle/icon.png
          tar -C build/linux/x64/release/bundle -acvf tofu-linux-${{ matrix.architecture }}-${{ env.BUILD_NAME }}.tar.gz .
          sha256sum tofu-linux-${{ matrix.architecture }}-${{ env.BUILD_NAME }}.tar.gz > tofu-linux-${{ matrix.architecture }}-${{ env.BUILD_NAME }}-sha256sum.txt

      - name: Upload files as artifacts to the release
        uses: softprops/action-gh-release@v0.1.15
        with:
          files: |
            tofu-linux-${{ matrix.architecture }}-${{ env.BUILD_NAME }}-sha256sum.txt
            tofu-linux-${{ matrix.architecture }}-${{ env.BUILD_NAME }}.tar.gz
          token: ${{ secrets.LINUX_RELEASE_TOKEN }}

      # - name: Upload app archive for next steps
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: tofu-archive-${{ matrix.architecture }}
      #     path: tofu-linux-${{ matrix.architecture }}-${{ env.BUILD_NAME }}.tar.gz

  build-flutter-google-play:
    needs: set-the-build-number
    name: Build and publish an Android app bundle for Google Play
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-java@v2
        with:
          distribution: "zulu"
          java-version: "11"

      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      - name: Checkout source
        uses: actions/checkout@v3

      # https://docs.github.com/en/actions/security-guides/encrypted-secrets#storing-base64-binary-blobs-as-secrets
      # https://unix.stackexchange.com/a/666142/374857
      - name: Unpack upload signing keys from key store
        env:
          PLAY_UPLOAD_KEY_PROPERTIES: ${{ secrets.PLAY_UPLOAD_KEY_PROPERTIES }}
          PLAY_UPLOAD_KEYSTORE: ${{ secrets.PLAY_UPLOAD_KEYSTORE }}
        run: |
          echo "$PLAY_UPLOAD_KEY_PROPERTIES"==== | fold -w 4 | sed '$ d' | tr -d '\n' | base64 -d > android/key.properties
          echo "$PLAY_UPLOAD_KEYSTORE"==== | fold -w 4 | sed '$ d' | tr -d '\n' | base64 -d > android/app/google-play-keystore.jks

      - name: Build Flutter Android app bundle
        run: |
          flutter pub get
          flutter build appbundle --release --build-name ${{ env.BUILD_NAME }} --build-number ${{ needs.set-the-build-number.outputs.build-number }}

      - uses: r0adkll/upload-google-play@v1.0.19
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          packageName: ${{ env.PROJECT_ID }}
          track: alpha
          status: draft
          releaseName: ${{ env.BUILD_NAME }}
          releaseFiles: build/app/outputs/bundle/release/app-release.aab
